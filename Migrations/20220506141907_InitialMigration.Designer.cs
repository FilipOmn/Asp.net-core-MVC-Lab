// <auto-generated />
using System;
using Lab4_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab4_MVC.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20220506141907_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab4_MVC.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Hans Hansson",
                            Description = "Do not read this terrible book",
                            Pages = 452,
                            Title = "ATerribleBook"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Bertil Jonsson",
                            Description = "A bad book, read if you´re bored",
                            Pages = 321,
                            Title = "ASlightlyBetterBook"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Daniel Danielsson",
                            Description = "A pretty good book, read if you have time",
                            Pages = 494,
                            Title = "APrettyDecentBook"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Gabriel Gabrielsson",
                            Description = "A great book, read it now",
                            Pages = 678,
                            Title = "AGreatBook"
                        });
                });

            modelBuilder.Entity("Lab4_MVC.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Fredrik.Efternamnsson@gmail.com",
                            FirstName = "Fredrik",
                            LastName = "Efternamnsson",
                            PhoneNumber = "076-111-22-33"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Jonas.Johansson@gmail.com",
                            FirstName = "Jonas",
                            LastName = "Johansson",
                            PhoneNumber = "076-222-33-44"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Per.Persson@gmail.com",
                            FirstName = "Per",
                            LastName = "Persson",
                            PhoneNumber = "076-333-44-55"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Erika.Eriksson@gmail.com",
                            FirstName = "Erika",
                            LastName = "Eriksson",
                            PhoneNumber = "076-444-55-66"
                        });
                });

            modelBuilder.Entity("Lab4_MVC.Models.CustomerBook", b =>
                {
                    b.Property<int>("CustomerBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Rented")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Returned")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerBooks");
                });

            modelBuilder.Entity("Lab4_MVC.Models.CustomerBook", b =>
                {
                    b.HasOne("Lab4_MVC.Models.Book", "Book")
                        .WithMany("CustomerBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab4_MVC.Models.Customer", "Customer")
                        .WithMany("CustomerBooks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
